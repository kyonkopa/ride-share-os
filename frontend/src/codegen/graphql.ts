/* eslint-disable */
import type { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = T | null | undefined;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** An ISO 8601-encoded date */
  ISO8601Date: { input: any; output: any; }
  /** An ISO 8601-encoded datetime */
  ISO8601DateTime: { input: any; output: any; }
};

/** Authentication tokens */
export type AuthToken = {
  __typename?: 'AuthToken';
  accessToken: Scalars['String']['output'];
  expiresIn: Scalars['Int']['output'];
  refreshToken: Scalars['String']['output'];
  tokenType: Scalars['String']['output'];
};

/** The possible cities for shift assignments */
export const CityEnum = {
  /** Accra */
  Accra: 'accra',
  /** Kumasi */
  Kumasi: 'kumasi',
  /** Takoradi */
  Takoradi: 'takoradi'
} as const;

export type CityEnum = typeof CityEnum[keyof typeof CityEnum];
/** Input type for clocking in to a shift */
export type ClockInInput = {
  /** GPS latitude */
  gpsLat?: InputMaybe<Scalars['Float']['input']>;
  /** GPS longitude */
  gpsLon?: InputMaybe<Scalars['Float']['input']>;
  /** Additional notes for the clock in event */
  notes?: InputMaybe<Scalars['String']['input']>;
  /** Current odometer reading */
  odometer?: InputMaybe<Scalars['Int']['input']>;
  /** ID of the shift assignment to clock into (optional - will auto-find active shift if not provided) */
  shiftAssignmentId?: InputMaybe<Scalars['Int']['input']>;
  /** ID of the vehicle to clock in to */
  vehicleId: Scalars['ID']['input'];
  /** Current vehicle range */
  vehicleRange?: InputMaybe<Scalars['Int']['input']>;
};

/** Autogenerated return type of ClockIn. */
export type ClockInPayload = {
  __typename?: 'ClockInPayload';
  /** An array of error messages */
  errors: Array<Error>;
  shiftEvent?: Maybe<ShiftEvent>;
};

/** Input type for clocking out of a shift */
export type ClockOutInput = {
  /** Earnings for the shift */
  earnings?: InputMaybe<Scalars['Float']['input']>;
  /** GPS latitude */
  gpsLat?: InputMaybe<Scalars['Float']['input']>;
  /** GPS longitude */
  gpsLon?: InputMaybe<Scalars['Float']['input']>;
  /** Additional notes for the clock out event */
  notes?: InputMaybe<Scalars['String']['input']>;
  /** Current odometer reading */
  odometer?: InputMaybe<Scalars['Int']['input']>;
  /** Revenue for the shift */
  revenue?: InputMaybe<Scalars['Float']['input']>;
  /** Current vehicle range */
  vehicleRange?: InputMaybe<Scalars['Int']['input']>;
};

/** Autogenerated return type of ClockOut. */
export type ClockOutPayload = {
  __typename?: 'ClockOutPayload';
  /** An array of error messages */
  errors: Array<Error>;
  shiftEvent?: Maybe<ShiftEvent>;
};

/** Input type for creating a new session */
export type CreateSessionInput = {
  /** User's email address */
  email: Scalars['String']['input'];
  /** Login scope - either 'user' or 'staff' */
  loginScope: LoginScopeEnum;
  /** User's password */
  password: Scalars['String']['input'];
};

/** Autogenerated return type of CreateSession. */
export type CreateSessionPayload = {
  __typename?: 'CreateSessionPayload';
  authToken?: Maybe<AuthToken>;
  /** An array of error messages */
  errors: Array<Error>;
  user?: Maybe<User>;
};

/** A driver in the system */
export type Driver = {
  __typename?: 'Driver';
  createdAt: Scalars['ISO8601DateTime']['output'];
  dob: Scalars['ISO8601Date']['output'];
  email: Scalars['String']['output'];
  expenses?: Maybe<Array<Expense>>;
  fullName: Scalars['String']['output'];
  globalId: Scalars['String']['output'];
  id: Scalars['String']['output'];
  phoneNumber: Scalars['String']['output'];
  revenueRecords?: Maybe<Array<RevenueRecord>>;
  shiftAssignments?: Maybe<Array<ShiftAssignment>>;
  updatedAt: Scalars['ISO8601DateTime']['output'];
  user?: Maybe<User>;
  verified: Scalars['Boolean']['output'];
};

/** Represents an error in the system */
export type Error = {
  __typename?: 'Error';
  code?: Maybe<Scalars['String']['output']>;
  field?: Maybe<Scalars['String']['output']>;
  message: Scalars['String']['output'];
};

/** An expense record */
export type Expense = {
  __typename?: 'Expense';
  amount: Scalars['Float']['output'];
  category: Scalars['String']['output'];
  createdAt: Scalars['ISO8601DateTime']['output'];
  date: Scalars['ISO8601Date']['output'];
  driver?: Maybe<Driver>;
  globalId: Scalars['String']['output'];
  id: Scalars['String']['output'];
  receiptKey?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['ISO8601DateTime']['output'];
  vehicle?: Maybe<Vehicle>;
};

/** The possible login scopes for authentication */
export const LoginScopeEnum = {
  /** Staff login scope */
  Staff: 'staff',
  /** Regular user login scope */
  User: 'user'
} as const;

export type LoginScopeEnum = typeof LoginScopeEnum[keyof typeof LoginScopeEnum];
export type Mutation = {
  __typename?: 'Mutation';
  /** Clock in to a shift assignment */
  clockIn?: Maybe<ClockInPayload>;
  /** Clock out of a shift assignment */
  clockOut?: Maybe<ClockOutPayload>;
  /** Login a user/create a session */
  createSession?: Maybe<CreateSessionPayload>;
};


export type MutationClockInArgs = {
  input: ClockInInput;
};


export type MutationClockOutArgs = {
  input: ClockOutInput;
};


export type MutationCreateSessionArgs = {
  input: CreateSessionInput;
};

export type Query = {
  __typename?: 'Query';
  /** Get the current shift */
  currentShift?: Maybe<ShiftAssignment>;
  /** Get the current authenticated user */
  currentUser?: Maybe<User>;
  /** Get today's shifts */
  todayShifts: Array<ShiftAssignment>;
  /** Get all vehicles in the system */
  vehicles: Array<Vehicle>;
};

/** A revenue record for a shift */
export type RevenueRecord = {
  __typename?: 'RevenueRecord';
  createdAt: Scalars['ISO8601DateTime']['output'];
  driver: Driver;
  globalId: Scalars['String']['output'];
  id: Scalars['String']['output'];
  reconciled: Scalars['Boolean']['output'];
  shiftAssignment: ShiftAssignment;
  totalProfit: Scalars['Float']['output'];
  totalRevenue: Scalars['Float']['output'];
  updatedAt: Scalars['ISO8601DateTime']['output'];
};

/** A shift assignment for a driver */
export type ShiftAssignment = {
  __typename?: 'ShiftAssignment';
  actualEndTime?: Maybe<Scalars['ISO8601DateTime']['output']>;
  actualStartTime?: Maybe<Scalars['ISO8601DateTime']['output']>;
  city: CityEnum;
  createdAt: Scalars['ISO8601DateTime']['output'];
  driver: Driver;
  endTime: Scalars['ISO8601DateTime']['output'];
  globalId: Scalars['String']['output'];
  id: Scalars['String']['output'];
  recurrenceRule?: Maybe<Scalars['String']['output']>;
  revenueRecords?: Maybe<Array<RevenueRecord>>;
  shiftEvents?: Maybe<Array<ShiftEvent>>;
  startTime: Scalars['ISO8601DateTime']['output'];
  status: ShiftStatusEnum;
  updatedAt: Scalars['ISO8601DateTime']['output'];
  vehicle: Vehicle;
};

/** An event that occurs during a shift */
export type ShiftEvent = {
  __typename?: 'ShiftEvent';
  createdAt: Scalars['ISO8601DateTime']['output'];
  eventType: ShiftEventTypeEnum;
  globalId: Scalars['String']['output'];
  gpsLat?: Maybe<Scalars['Float']['output']>;
  gpsLon?: Maybe<Scalars['Float']['output']>;
  id: Scalars['String']['output'];
  notes?: Maybe<Scalars['String']['output']>;
  odometer?: Maybe<Scalars['Int']['output']>;
  shiftAssignment: ShiftAssignment;
  updatedAt: Scalars['ISO8601DateTime']['output'];
  vehicleRange?: Maybe<Scalars['Int']['output']>;
};

/** The possible types of shift events */
export const ShiftEventTypeEnum = {
  /** A clock in event */
  ClockIn: 'clock_in',
  /** A clock out event */
  ClockOut: 'clock_out',
  /** A telemetry snapshot event */
  TelemetrySnapshot: 'telemetry_snapshot'
} as const;

export type ShiftEventTypeEnum = typeof ShiftEventTypeEnum[keyof typeof ShiftEventTypeEnum];
/** The possible statuses for a shift assignment */
export const ShiftStatusEnum = {
  /** Shift is currently active */
  Active: 'active',
  /** Shift has been completed */
  Completed: 'completed',
  /** Shift was missed */
  Missed: 'missed',
  /** Shift is scheduled but not yet started */
  Scheduled: 'scheduled'
} as const;

export type ShiftStatusEnum = typeof ShiftStatusEnum[keyof typeof ShiftStatusEnum];
/** A user in the system */
export type User = {
  __typename?: 'User';
  createdAt: Scalars['ISO8601DateTime']['output'];
  driver?: Maybe<Driver>;
  email: Scalars['String']['output'];
  firstName: Scalars['String']['output'];
  fullName: Scalars['String']['output'];
  globalId: Scalars['String']['output'];
  id: Scalars['String']['output'];
  lastName: Scalars['String']['output'];
  lastSignInAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  signInCount: Scalars['Int']['output'];
  updatedAt: Scalars['ISO8601DateTime']['output'];
};

/** A vehicle in the system */
export type Vehicle = {
  __typename?: 'Vehicle';
  createdAt: Scalars['ISO8601DateTime']['output'];
  displayName: Scalars['String']['output'];
  expenses?: Maybe<Array<Expense>>;
  globalId: Scalars['String']['output'];
  id: Scalars['String']['output'];
  latestOdometer: Scalars['Int']['output'];
  latestRange: Scalars['Int']['output'];
  licensePlate: Scalars['String']['output'];
  make: Scalars['String']['output'];
  model: Scalars['String']['output'];
  shiftAssignments?: Maybe<Array<ShiftAssignment>>;
  telematicsSource: Scalars['Int']['output'];
  updatedAt: Scalars['ISO8601DateTime']['output'];
  yearOfManufacture: Scalars['Int']['output'];
};

export type ClockInMutationMutationVariables = Exact<{
  input: ClockInInput;
}>;


export type ClockInMutationMutation = { __typename?: 'Mutation', clockIn?: { __typename?: 'ClockInPayload', shiftEvent?: { __typename?: 'ShiftEvent', id: string, eventType: ShiftEventTypeEnum, odometer?: number | null, vehicleRange?: number | null, gpsLat?: number | null, gpsLon?: number | null, notes?: string | null, shiftAssignment: { __typename?: 'ShiftAssignment', id: string, status: ShiftStatusEnum, driver: { __typename?: 'Driver', id: string, fullName: string }, vehicle: { __typename?: 'Vehicle', id: string, licensePlate: string, model: string } } } | null, errors: Array<{ __typename?: 'Error', message: string, field?: string | null, code?: string | null }> } | null };

export type VehiclesQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type VehiclesQueryQuery = { __typename?: 'Query', vehicles: Array<(
    { __typename?: 'Vehicle' }
    & { ' $fragmentRefs'?: { 'VehicleFragmentFragment': VehicleFragmentFragment } }
  )> };

export type VehicleFragmentFragment = { __typename?: 'Vehicle', id: string, globalId: string, make: string, model: string, licensePlate: string, yearOfManufacture: number, displayName: string, latestOdometer: number, latestRange: number, telematicsSource: number, createdAt: any, updatedAt: any } & { ' $fragmentName'?: 'VehicleFragmentFragment' };

export type ClockOutMutationMutationVariables = Exact<{
  input: ClockOutInput;
}>;


export type ClockOutMutationMutation = { __typename?: 'Mutation', clockOut?: { __typename?: 'ClockOutPayload', shiftEvent?: { __typename?: 'ShiftEvent', id: string, eventType: ShiftEventTypeEnum, odometer?: number | null, vehicleRange?: number | null, gpsLat?: number | null, gpsLon?: number | null, notes?: string | null, shiftAssignment: { __typename?: 'ShiftAssignment', id: string, status: ShiftStatusEnum, driver: { __typename?: 'Driver', id: string, fullName: string }, vehicle: { __typename?: 'Vehicle', id: string, licensePlate: string, model: string } } } | null, errors: Array<{ __typename?: 'Error', message: string, field?: string | null, code?: string | null }> } | null };

export type CurrentShiftQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type CurrentShiftQueryQuery = { __typename?: 'Query', currentShift?: (
    { __typename?: 'ShiftAssignment' }
    & { ' $fragmentRefs'?: { 'CurrentShiftFragmentFragment': CurrentShiftFragmentFragment } }
  ) | null };

export type CurrentShiftFragmentFragment = { __typename?: 'ShiftAssignment', id: string, status: ShiftStatusEnum, city: CityEnum, startTime: any, endTime: any, driver: { __typename?: 'Driver', id: string, fullName: string, email: string }, vehicle: { __typename?: 'Vehicle', id: string, licensePlate: string, model: string, yearOfManufacture: number, latestOdometer: number, latestRange: number }, shiftEvents?: Array<{ __typename?: 'ShiftEvent', id: string, eventType: ShiftEventTypeEnum, odometer?: number | null, vehicleRange?: number | null, gpsLat?: number | null, gpsLon?: number | null, notes?: string | null, createdAt: any }> | null } & { ' $fragmentName'?: 'CurrentShiftFragmentFragment' };

export type CreateSessionMutationMutationVariables = Exact<{
  input: CreateSessionInput;
}>;


export type CreateSessionMutationMutation = { __typename?: 'Mutation', createSession?: { __typename?: 'CreateSessionPayload', user?: { __typename?: 'User', id: string, email: string, firstName: string, lastName: string, fullName: string, driver?: { __typename?: 'Driver', id: string, fullName: string } | null } | null, authToken?: { __typename?: 'AuthToken', accessToken: string, refreshToken: string, tokenType: string, expiresIn: number } | null, errors: Array<{ __typename?: 'Error', message: string, code?: string | null, field?: string | null }> } | null };

export type TodayShiftsQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type TodayShiftsQueryQuery = { __typename?: 'Query', todayShifts: Array<{ __typename?: 'ShiftAssignment', id: string, globalId: string, city: CityEnum, startTime: any, actualStartTime?: any | null, endTime: any, actualEndTime?: any | null, status: ShiftStatusEnum, recurrenceRule?: string | null, createdAt: any, updatedAt: any, driver: { __typename?: 'Driver', id: string, globalId: string, fullName: string, email: string, phoneNumber: string, createdAt: any }, vehicle: { __typename?: 'Vehicle', id: string, globalId: string, licensePlate: string, model: string, make: string, yearOfManufacture: number, latestOdometer: number, displayName: string, latestRange: number, telematicsSource: number }, shiftEvents?: Array<{ __typename?: 'ShiftEvent', id: string, globalId: string, eventType: ShiftEventTypeEnum, odometer?: number | null, vehicleRange?: number | null, gpsLat?: number | null, gpsLon?: number | null, notes?: string | null, createdAt: any }> | null, revenueRecords?: Array<{ __typename?: 'RevenueRecord', id: string, globalId: string, totalRevenue: number, totalProfit: number, reconciled: boolean, createdAt: any }> | null }> };

export const VehicleFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"VehicleFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Vehicle"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"globalId"}},{"kind":"Field","name":{"kind":"Name","value":"make"}},{"kind":"Field","name":{"kind":"Name","value":"model"}},{"kind":"Field","name":{"kind":"Name","value":"licensePlate"}},{"kind":"Field","name":{"kind":"Name","value":"yearOfManufacture"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"latestOdometer"}},{"kind":"Field","name":{"kind":"Name","value":"latestRange"}},{"kind":"Field","name":{"kind":"Name","value":"telematicsSource"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"updatedAt"}}]}}]} as unknown as DocumentNode<VehicleFragmentFragment, unknown>;
export const CurrentShiftFragmentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"CurrentShiftFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ShiftAssignment"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"city"}},{"kind":"Field","name":{"kind":"Name","value":"startTime"}},{"kind":"Field","name":{"kind":"Name","value":"endTime"}},{"kind":"Field","name":{"kind":"Name","value":"driver"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"fullName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}}]}},{"kind":"Field","name":{"kind":"Name","value":"vehicle"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"licensePlate"}},{"kind":"Field","name":{"kind":"Name","value":"model"}},{"kind":"Field","name":{"kind":"Name","value":"yearOfManufacture"}},{"kind":"Field","name":{"kind":"Name","value":"latestOdometer"}},{"kind":"Field","name":{"kind":"Name","value":"latestRange"}}]}},{"kind":"Field","name":{"kind":"Name","value":"shiftEvents"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"eventType"}},{"kind":"Field","name":{"kind":"Name","value":"odometer"}},{"kind":"Field","name":{"kind":"Name","value":"vehicleRange"}},{"kind":"Field","name":{"kind":"Name","value":"gpsLat"}},{"kind":"Field","name":{"kind":"Name","value":"gpsLon"}},{"kind":"Field","name":{"kind":"Name","value":"notes"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}}]}}]}}]} as unknown as DocumentNode<CurrentShiftFragmentFragment, unknown>;
export const ClockInMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"ClockInMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ClockInInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"clockIn"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"shiftEvent"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"eventType"}},{"kind":"Field","name":{"kind":"Name","value":"odometer"}},{"kind":"Field","name":{"kind":"Name","value":"vehicleRange"}},{"kind":"Field","name":{"kind":"Name","value":"gpsLat"}},{"kind":"Field","name":{"kind":"Name","value":"gpsLon"}},{"kind":"Field","name":{"kind":"Name","value":"notes"}},{"kind":"Field","name":{"kind":"Name","value":"shiftAssignment"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"driver"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"fullName"}}]}},{"kind":"Field","name":{"kind":"Name","value":"vehicle"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"licensePlate"}},{"kind":"Field","name":{"kind":"Name","value":"model"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"field"}},{"kind":"Field","name":{"kind":"Name","value":"code"}}]}}]}}]}}]} as unknown as DocumentNode<ClockInMutationMutation, ClockInMutationMutationVariables>;
export const VehiclesQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"VehiclesQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"vehicles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"VehicleFragment"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"VehicleFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Vehicle"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"globalId"}},{"kind":"Field","name":{"kind":"Name","value":"make"}},{"kind":"Field","name":{"kind":"Name","value":"model"}},{"kind":"Field","name":{"kind":"Name","value":"licensePlate"}},{"kind":"Field","name":{"kind":"Name","value":"yearOfManufacture"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"latestOdometer"}},{"kind":"Field","name":{"kind":"Name","value":"latestRange"}},{"kind":"Field","name":{"kind":"Name","value":"telematicsSource"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"updatedAt"}}]}}]} as unknown as DocumentNode<VehiclesQueryQuery, VehiclesQueryQueryVariables>;
export const ClockOutMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"ClockOutMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ClockOutInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"clockOut"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"shiftEvent"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"eventType"}},{"kind":"Field","name":{"kind":"Name","value":"odometer"}},{"kind":"Field","name":{"kind":"Name","value":"vehicleRange"}},{"kind":"Field","name":{"kind":"Name","value":"gpsLat"}},{"kind":"Field","name":{"kind":"Name","value":"gpsLon"}},{"kind":"Field","name":{"kind":"Name","value":"notes"}},{"kind":"Field","name":{"kind":"Name","value":"shiftAssignment"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"driver"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"fullName"}}]}},{"kind":"Field","name":{"kind":"Name","value":"vehicle"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"licensePlate"}},{"kind":"Field","name":{"kind":"Name","value":"model"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"field"}},{"kind":"Field","name":{"kind":"Name","value":"code"}}]}}]}}]}}]} as unknown as DocumentNode<ClockOutMutationMutation, ClockOutMutationMutationVariables>;
export const CurrentShiftQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"CurrentShiftQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentShift"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"CurrentShiftFragment"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"CurrentShiftFragment"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ShiftAssignment"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"city"}},{"kind":"Field","name":{"kind":"Name","value":"startTime"}},{"kind":"Field","name":{"kind":"Name","value":"endTime"}},{"kind":"Field","name":{"kind":"Name","value":"driver"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"fullName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}}]}},{"kind":"Field","name":{"kind":"Name","value":"vehicle"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"licensePlate"}},{"kind":"Field","name":{"kind":"Name","value":"model"}},{"kind":"Field","name":{"kind":"Name","value":"yearOfManufacture"}},{"kind":"Field","name":{"kind":"Name","value":"latestOdometer"}},{"kind":"Field","name":{"kind":"Name","value":"latestRange"}}]}},{"kind":"Field","name":{"kind":"Name","value":"shiftEvents"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"eventType"}},{"kind":"Field","name":{"kind":"Name","value":"odometer"}},{"kind":"Field","name":{"kind":"Name","value":"vehicleRange"}},{"kind":"Field","name":{"kind":"Name","value":"gpsLat"}},{"kind":"Field","name":{"kind":"Name","value":"gpsLon"}},{"kind":"Field","name":{"kind":"Name","value":"notes"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}}]}}]}}]} as unknown as DocumentNode<CurrentShiftQueryQuery, CurrentShiftQueryQueryVariables>;
export const CreateSessionMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"CreateSessionMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CreateSessionInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"createSession"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"fullName"}},{"kind":"Field","name":{"kind":"Name","value":"driver"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"fullName"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"authToken"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"accessToken"}},{"kind":"Field","name":{"kind":"Name","value":"refreshToken"}},{"kind":"Field","name":{"kind":"Name","value":"tokenType"}},{"kind":"Field","name":{"kind":"Name","value":"expiresIn"}}]}},{"kind":"Field","name":{"kind":"Name","value":"errors"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"code"}},{"kind":"Field","name":{"kind":"Name","value":"field"}}]}}]}}]}}]} as unknown as DocumentNode<CreateSessionMutationMutation, CreateSessionMutationMutationVariables>;
export const TodayShiftsQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"TodayShiftsQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"todayShifts"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"globalId"}},{"kind":"Field","name":{"kind":"Name","value":"city"}},{"kind":"Field","name":{"kind":"Name","value":"startTime"}},{"kind":"Field","name":{"kind":"Name","value":"actualStartTime"}},{"kind":"Field","name":{"kind":"Name","value":"endTime"}},{"kind":"Field","name":{"kind":"Name","value":"actualEndTime"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"recurrenceRule"}},{"kind":"Field","name":{"kind":"Name","value":"driver"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"globalId"}},{"kind":"Field","name":{"kind":"Name","value":"fullName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phoneNumber"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}}]}},{"kind":"Field","name":{"kind":"Name","value":"vehicle"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"globalId"}},{"kind":"Field","name":{"kind":"Name","value":"licensePlate"}},{"kind":"Field","name":{"kind":"Name","value":"model"}},{"kind":"Field","name":{"kind":"Name","value":"make"}},{"kind":"Field","name":{"kind":"Name","value":"yearOfManufacture"}},{"kind":"Field","name":{"kind":"Name","value":"latestOdometer"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"latestRange"}},{"kind":"Field","name":{"kind":"Name","value":"telematicsSource"}}]}},{"kind":"Field","name":{"kind":"Name","value":"shiftEvents"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"globalId"}},{"kind":"Field","name":{"kind":"Name","value":"eventType"}},{"kind":"Field","name":{"kind":"Name","value":"odometer"}},{"kind":"Field","name":{"kind":"Name","value":"vehicleRange"}},{"kind":"Field","name":{"kind":"Name","value":"gpsLat"}},{"kind":"Field","name":{"kind":"Name","value":"gpsLon"}},{"kind":"Field","name":{"kind":"Name","value":"notes"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}}]}},{"kind":"Field","name":{"kind":"Name","value":"revenueRecords"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"globalId"}},{"kind":"Field","name":{"kind":"Name","value":"totalRevenue"}},{"kind":"Field","name":{"kind":"Name","value":"totalProfit"}},{"kind":"Field","name":{"kind":"Name","value":"reconciled"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}}]}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"updatedAt"}}]}}]}}]} as unknown as DocumentNode<TodayShiftsQueryQuery, TodayShiftsQueryQueryVariables>;