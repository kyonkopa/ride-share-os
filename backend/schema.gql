"""
Authentication tokens
"""
type AuthToken {
  accessToken: String!
  expiresIn: Int!
  refreshToken: String!
  tokenType: String!
}

"""
A driver in the system
"""
type Driver {
  createdAt: ISO8601DateTime!
  dob: ISO8601Date!
  email: String!
  expenses: [Expense!]
  fullName: String!
  globalId: String!
  id: String!
  phoneNumber: String!
  revenueRecords: [RevenueRecord!]
  shiftAssignments: [ShiftAssignment!]
  updatedAt: ISO8601DateTime!
  user: User
  verified: Boolean!
}

"""
Represents an error in the system
"""
type Error {
  code: String
  field: String
  message: String!
}

"""
An expense record
"""
type Expense {
  amount: Float!
  category: String!
  createdAt: ISO8601DateTime!
  date: ISO8601Date!
  driver: Driver
  globalId: String!
  id: String!
  receiptKey: String
  updatedAt: ISO8601DateTime!
  vehicle: Vehicle
}

"""
Autogenerated return type of GoogleSignInMutation.
"""
type GoogleSignInMutationPayload {
  """
  An array of error messages
  """
  errors: [Error!]!
  tokens: AuthToken
  user: User
}

"""
An ISO 8601-encoded date
"""
scalar ISO8601Date @specifiedBy(url: "https://tools.ietf.org/html/rfc3339")

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime @specifiedBy(url: "https://tools.ietf.org/html/rfc3339")

type Mutation {
  """
  Sign in with Google OAuth
  """
  googleSignIn(
    """
    Google OAuth token
    """
    googleToken: String!
  ): GoogleSignInMutationPayload

  """
  Refresh authentication tokens
  """
  refreshToken(
    """
    Refresh token
    """
    refreshToken: String!
  ): RefreshTokenMutationPayload
}

type Query {
  """
  Get the current authenticated user
  """
  currentUser: User

  """
  An example field added by the generator
  """
  testField: String!
}

"""
Autogenerated return type of RefreshTokenMutation.
"""
type RefreshTokenMutationPayload {
  errors: [Error!]!
  tokens: AuthToken
}

"""
A revenue record for a shift
"""
type RevenueRecord {
  createdAt: ISO8601DateTime!
  driver: Driver!
  globalId: String!
  id: String!
  reconciled: Boolean!
  shiftAssignment: ShiftAssignment!
  totalProfit: Float!
  totalRevenue: Float!
  updatedAt: ISO8601DateTime!
}

"""
A shift assignment for a driver
"""
type ShiftAssignment {
  city: Int!
  createdAt: ISO8601DateTime!
  driver: Driver!
  endTime: ISO8601DateTime!
  globalId: String!
  id: String!
  recurrenceRule: String
  revenueRecords: [RevenueRecord!]
  shiftEvents: [ShiftEvent!]
  startTime: ISO8601DateTime!
  status: Int!
  updatedAt: ISO8601DateTime!
  vehicle: Vehicle!
}

"""
An event that occurs during a shift
"""
type ShiftEvent {
  createdAt: ISO8601DateTime!
  eventType: Int!
  globalId: String!
  gpsLat: Float
  gpsLon: Float
  id: String!
  notes: String
  odometer: Int
  shiftAssignment: ShiftAssignment!
  updatedAt: ISO8601DateTime!
  vehicleRange: Int
}

"""
A user in the system
"""
type User {
  avatarUrl: String
  createdAt: ISO8601DateTime!
  displayName: String!
  driver: Driver
  email: String!
  firstName: String!
  fullName: String!
  globalId: String!
  googleId: String!
  id: String!
  lastName: String!
  lastSignInAt: ISO8601DateTime
  provider: String!
  signInCount: Int!
  updatedAt: ISO8601DateTime!
}

"""
A vehicle in the system
"""
type Vehicle {
  createdAt: ISO8601DateTime!
  expenses: [Expense!]
  globalId: String!
  id: String!
  latestOdometer: Int!
  latestRange: Int!
  licensePlate: String!
  model: String!
  shiftAssignments: [ShiftAssignment!]
  telematicsSource: Int!
  updatedAt: ISO8601DateTime!
  yearOfManufacture: Int!
}
